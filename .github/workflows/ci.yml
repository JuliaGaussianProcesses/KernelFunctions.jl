name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.group }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - '1.3'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        group:
          - 'Transform'
          - 'BaseKernels'
          - 'Kernels'
          - 'MultiOutput'
          - 'Others'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          coverage: ${{ matrix.version == '1' && matrix.os == 'ubuntu-latest' }}
        env:
          GROUP: ${{ matrix.group }}
      - uses: julia-actions/julia-processcoverage@v1
        if: matrix.version == '1' && matrix.os == 'ubuntu-latest'
      - name: Coveralls parallel
        if: matrix.version == '1' && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
          flag-name: run-${{ matrix.group }}
          parallel: true
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Send coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
