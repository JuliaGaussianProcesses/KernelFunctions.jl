name: Run benchmarks

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}


jobs:
  performance-tracking:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'performance critical')
    steps:
      # setup
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.6'
      - uses: julia-actions/julia-buildpkg@latest
      - name: install dependencies
        run: julia -e 'using Pkg; pkg"add PkgBenchmark BenchmarkCI"'

      # run the benchmark suite
      - name: run benchmarks
        run: |
          julia -e '
            using BenchmarkCI
            BenchmarkCI.judge()
            BenchmarkCI.displayjudgement()
            '
      # generate and record the benchmark result as markdown
      - name: generate benchmark result
        run: |
          body=$(julia -e '
          using BenchmarkCI
          let
              judgement = BenchmarkCI._loadjudge(BenchmarkCI.DEFAULT_WORKSPACE)
              title = "Kernel Benchmark Result"
              ciresult = BenchmarkCI.CIResult(; judgement, title)
              BenchmarkCI.printcommentmd(stdout::IO, ciresult)
          end
          ')
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo $body > ./benchmark-result.artifact
      # record the pull request number
      - name: record pull request number
        run: echo ${{ github.event.pull_request.number }} > ./pull-request-number.artifact

      # save as artifacts (performance tracking (comment) workflow will use it)
      - uses: actions/upload-artifact@v2
        with:
          name: performance-tracking
          path: ./*.artifact
      - name: find comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Kernel Benchmark Result

      # create/update comment
      - name: create comment
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.generate-result-markdown.outputs.body }}
      - name: update comment
        if: ${{ steps.fc.outputs.comment-id != 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: ${{ steps.generate-result-markdown.outputs.body }}
